---
# tasks file for kube-init
- name: disable selinux
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'

- name: disable firewalld
  service: 
    name: firewalld
    state: stopped

- name: copy docker-ce/kube-aliyun repo
  template:
    src: "{{ item }}"
    dest: "{{ YUM_REPO_HOME }}"
  with_items:
    - "{{ TMP_FILE_DOCKER_CE_REPO }}"
    - "{{ TMP_FILE_KUBE_ALIYUN_REPO }}"

- name: install docker, kubeadm
  yum: 
    name: "{{ item }}"
    state: latest
  with_items:
    - docker-ce
    - kubernetes-cni
    - kubelet
    - kubectl
    - kubeadm

- name: enable docker/kubelet service
  service: 
    name: "{{ item }}"
    enabled: yes

- name: start docker service
  service:
    name: docker
    state: started

- name: docker pull/retag/rmi images 
  shell:
    docker pull {{ KUBE_REPO_LOCAL }}/{{ item }} && docker tag {{ KUBE_REPO_LOCAL }}/{{ item }} {{ KUBE_REPO_DEFAULT }}/{{ item }} && docker rmi {{ KUBE_REPO_LOCAL }}/{{ item }}

  with_items:
    - metrics-server-amd64:v0.3.1
    - heapster-influxdb-amd64:v1.5.2
    - heapster-grafana-amd64:v5.0.4
    - heapster-amd64:v1.5.4
    - coredns:1.2.2
    - etcd:3.2.24
    - pause:3.1
    - kube-proxy:v1.12.2
    - kube-scheduler:v1.12.2
    - kube-controller-manager:v1.12.2
    - kube-apiserver:v1.12.2


- name: config kubelet config, turn off swap
  template:
    src: "{{ TMP_KUBELET_CONFIG }}"
    dest: "{{ KUBELET_CONFIG }}"

# - name: config kernel args
#   shell:
#     echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables

- name: config kernel args, proc && auto
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_dict:
    - {key: "net.bridge.bridge-nf-call-iptables", value: "1"}
    # - {key: "", value: ""}


- name: ip_vs mod load
  shell:
    modprobe -- {{ item }}
  with_items: "{{ KERNEL_MOD_IP_VS }}"

- name: ip_vs mod auto load 
  template:
    src: "{{ TMP_KERNEL_MOD_IP_VS }}"
    dest: "{{ KERNEL_MOD_DIR }}{{ KERNEL_MOD_IP_VS_NAME }}"


 













